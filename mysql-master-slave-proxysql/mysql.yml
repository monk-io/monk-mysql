---
namespace: monk-mysql-proxysql

mysql-common:
  metadata:
    name: mysql
    description: |
      MySQL is a free, open-source relational database management system (RDBMS) that uses Structured Query Language (SQL) to manage and manipulate data. It is widely used by web developers and businesses to create and manage databases for various applications.
      Some of the key features of MySQL include:
      Scalability: MySQL can handle large amounts of data and supports multiple users and concurrent connections.
      High performance: MySQL is optimized for speed and can handle a large number of queries at once.
      Security: MySQL has built-in security features that can help protect against unauthorized access and ensure data privacy.
      Flexibility: MySQL is highly customizable and can be used with a variety of programming languages and operating systems.
      Availability: MySQL is widely used and has a large user community, which means that there is a wealth of resources and support available for developers.
    website: https://www.mysql.com/
    publisher: monk.io
    icon: https://labs.mysql.com/common/logos/mysql-logo.svg?v2
    private: true
  connections:
    master:
      runnable: monk-mysql-proxysql/master
      service: mysql
    slave1:
      runnable: monk-mysql-proxysql/slave1
      service: mysql
    slave2:
      runnable: monk-mysql-proxysql/slave2
      service: mysql
  variables:
    image_tag:
      type: string
      value: <- $mysql_image_tag default("8.0")
    database_name:
      type: string
      env: MYSQL_DATABASE
      value: <- $mysql_database_name default("monk")
    database_user:
      env: MYSQL_USER
      type: string
      value: <- $mysql_database_user default("db_user")
    database_password:
      env: MYSQL_PASSWORD
      type: string
      value: <- $mysql_database_password default("RhgDPXPEnAgxxXYZ")
    database_root_password:
      env: MYSQL_ROOT_PASSWORD
      value: <- $mysql_database_root_password default("RhgDPXPEnAgJ5q5g")
      type: string
    database_master_host:
      env: MYSQL_MASTER_HOST
      type: string
      value: <- connection-hostname("master")
    database_slave1_host:
      env: MYSQL_SLAVE1_HOST
      type: string
      value: <- connection-hostname("slave1")
    database_slave2_host:
      env: MYSQL_SLAVE2_HOST
      type: string
      value: <- connection-hostname("slave2")
  services:
    mysql:
      port: 3306
      container: mysql
      protocol: tcp
  containers:
    mysql:
      image: mysql
      image-tag: <- $image_tag default("8.0")

master:
  defines: runnable
  inherits: monk-mysql-proxysql/mysql-common
  containers:
    mysql:
      paths:
        - <- `${monk-volume-path}/mysql/master:/var/lib/mysql`
  files:
    my-file:
      raw: true
      contents: |
        [mysqld]
        server-id=1
        log-bin=mysql-bin
        log-slave-updates=1
        datadir=/var/lib/mysql/
        innodb_flush_log_at_trx_commit = 2
        innodb_flush_method = O_DIRECT
        skip-host-cache
        skip-name-resolve
        default-authentication-plugin=mysql_native_password
      container: mysql
      path: /etc/mysql/conf.d/master.cnf
      mode: 0644

slave1:
  defines: runnable
  inherits: monk-mysql-proxysql/mysql-common
  containers:
    mysql:
      paths:
        - <- `${monk-volume-path}/mysql/slave-1:/var/lib/mysql`
  files:
    my-file:
      raw: true
      contents: |
        [mysqld]
        server-id=2
        log-bin=mysql-bin
        log-slave-updates=1
        auto_increment_increment=2
        auto_increment_offset=2
        datadir=/var/lib/mysql
        read-only=1
        slave-skip-errors = 1062
        skip-host-cache
        skip-name-resolve
        default-authentication-plugin=mysql_native_password
      container: mysql
      path: /etc/mysql/conf.d/slave1.cnf
      mode: 0644
  depends:
    wait-for:
      runnables:
        - monk-mysql-proxysql/master
      timeout: 60

slave2:
  defines: runnable
  inherits: monk-mysql-proxysql/mysql-common
  containers:
    mysql:
      paths:
        - <- `${monk-volume-path}/mysql/slave-2:/var/lib/mysql`
  files:
    my-file:
      raw: true
      contents: |
        [mysqld]
        server-id=3
        log-bin=mysql-bin
        log-slave-updates=1
        auto_increment_increment=2
        auto_increment_offset=2
        datadir=/var/lib/mysql
        read-only=1
        slave-skip-errors = 1062
        skip-host-cache
        skip-name-resolve
        default-authentication-plugin=mysql_native_password
      container: mysql
      path: /etc/mysql/conf.d/slave2.cnf
      mode: 0644
  depends:
    wait-for:
      runnables:
        - monk-mysql-proxysql/master
        - monk-mysql-proxysql/slave1
      timeout: 60

configure:
  defines: runnable
  inherits: monk-mysql-proxysql/mysql-common
  variables:
    mysql_master_password:
      env: MYSQL_MASTER_PASSWORD
      type: string
      value: <- $mysql_database_root_password default("RhgDPXPEnAgJ5q5g")
    mysql_repl_user:
      env: MYSQL_REPLICATION_USER
      type: string
      value: <- $mysql_database_repl_user default("repl")
    mysql_repl_password:
      env: MYSQL_REPLICATION_PASSWORD
      value: <- $mysql_database_repl_password default("RhgDPXPEnAgJ5q5g")
      type: string
    database_monitor_password:
      env: MYSQL_MONITOR_PASSWORD
      value: <- $mysql_database_monitor_password default("RhgDPXPEnAgJ5q5g")
      type: string
    database_monitor_user:
      env: MYSQL_MONITOR_USER
      value: <- $mysql_database_monitor_user default("monitor")
      type: string
  containers:
    mysql:
      bash: /tmp/init.sh
      image: mysql
      image-tag: <- $image_tag default("8.0")
  files:
    defines: files
    my-file:
      raw: true
      contents: |
        #!/bin/sh
        while ! mysqladmin ping -u root -h $MYSQL_MASTER_HOST -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST --silent; do
          sleep 1
        done
        mysql -u root -h $MYSQL_MASTER_HOST -p$MYSQL_ROOT_PASSWORD  -e "RESET MASTER;"
        mysql -u root -h $MYSQL_MASTER_HOST -p$MYSQL_ROOT_PASSWORD  -e "FLUSH TABLES WITH READ LOCK;"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "UNLOCK TABLES;"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY '$MYSQL_ROOT_PASSWORD';"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "CREATE USER '$MYSQL_MONITOR_USER'@'%' IDENTIFIED BY '$MYSQL_MONITOR_PASSWORD';"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "FLUSH PRIVILEGES;"
        mysqldump -uroot -h $MYSQL_MASTER_HOST  -p$MYSQL_ROOT_PASSWORD --all-databases --source-data --single-transaction --flush-logs --events --result-file=/tmp/master_dump.sql
        mysql -h $MYSQL_SLAVE1_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "STOP SLAVE;";
        mysql -h $MYSQL_SLAVE1_HOST -u root -p$MYSQL_ROOT_PASSWORD < /tmp/master_dump.sql
        mysql -h $MYSQL_SLAVE1_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;";
        mysql -h $MYSQL_SLAVE2_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "STOP SLAVE;";
        mysql -h $MYSQL_SLAVE2_HOST -u root -p$MYSQL_ROOT_PASSWORD < /tmp/master_dump.sql
        mysql -h $MYSQL_SLAVE2_HOST -u root -p$MYSQL_ROOT_PASSWORD -e "FLUSH PRIVILEGES;";
        log_file=`mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "SHOW MASTER STATUS\G" | grep File: | awk '{print $2}'`
        pos=`mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_MASTER_HOST -e "SHOW MASTER STATUS\G" | grep Position: | awk '{print $2}'`
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE1_HOST -e "RESET SLAVE";
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE1_HOST -e "CHANGE MASTER TO MASTER_HOST='$MYSQL_MASTER_HOST', MASTER_USER='root', MASTER_PASSWORD='$MYSQL_ROOT_PASSWORD', MASTER_LOG_FILE='${log_file}', MASTER_LOG_POS=${pos};"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE1_HOST -e "start slave"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE2_HOST -e "RESET SLAVE";
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE2_HOST -e "CHANGE MASTER TO MASTER_HOST='$MYSQL_MASTER_HOST', MASTER_USER='root', MASTER_PASSWORD='$MYSQL_ROOT_PASSWORD', MASTER_LOG_FILE='${log_file}', MASTER_LOG_POS=${pos};"
        mysql -u root -p$MYSQL_ROOT_PASSWORD -h $MYSQL_SLAVE2_HOST -e "start slave"
      container: mysql
      path: /tmp/init.sh
      mode: 0755
  depends:
    wait-for:
      runnables:
        - monk-mysql-proxysql/master
        - monk-mysql-proxysql/slave1
        - monk-mysql-proxysql/slave2
      timeout: 60

lb:
  defines: runnable
  connections:
    master:
      runnable: monk-mysql-proxysql/master
      service: mysql
    slave1:
      runnable: monk-mysql-proxysql/slave1
      service: mysql
    slave2:
      runnable: monk-mysql-proxysql/slave2
      service: mysql
  variables:
    mysql-master-host:
      env: MYSQL_MASTER_HOST
      type: string
      value: <- connection-hostname("master")
    mysql-slave1-host:
      env: MYSQL_SLAVE1_HOST
      type: string
      value: <- connection-hostname("slave1")
    database_slave2_host:
      env: MYSQL_SLAVE2_HOST
      type: string
      value: <- connection-hostname("slave2")
    mpassword:
      env: MYSQL_ROOT_PASSWORD
      type: string
      value: <- $mysql_database_root_password default("RhgDPXPEnAgJ5q5g")
    monitor_user_password:
      env: MYSQL_MONITOR_PASSWORD
      value: <- $mysql_database_monitor_password default("RhgDPXPEnAgJ5q5g")
      type: string
    monitor_user:
      env: MYSQL_MONITOR_USER
      value: <- $mysql_database_monitor_user default("monitor")
      type: string
  containers:
    monk-proxysql:
      image: severalnines/proxysql
  files:
    my-file:
      contents: |
        datadir="/var/lib/proxysql"
        admin_variables=
        {
          admin_credentials="{{ v "proxysql_admin_username"}}:{{ v "proxysql_admin_password"}}"
          stats_credentials="{{ v "proxysql_admin_username"}}:{{ v "proxysql_admin_password"}}"
          mysql_ifaces="0.0.0.0:6032"
          refresh_interval=2000
          admin-hash_passwords=false
          web_enabled=true
          web_port=6080
        }
        mysql_variables=
        {
          threads=4
          max_connections=2048
          default_query_delay=0
          default_query_timeout=36000000
          have_compress=true
          poll_timeout=2000
          interfaces="0.0.0.0:6033;/tmp/proxysql.sock"
          default_schema="information_schema"
          stacksize=1048576
          server_version="5.1.30"
          connect_timeout_server=10000
          monitor_history=60000
          monitor_connect_interval=200000
          monitor_ping_interval=200000
          ping_interval_server_msec=10000
          ping_timeout_server=200
          commands_stats=true
          sessions_sort=true
          monitor_username="{{ v "monitor_user" }}"
          monitor_password="{{ v "monitor_user_password" }}"
          set_query_lock_on_hostgroup=0
        }
        mysql_replication_hostgroups =
        (
          {
            writer_hostgroup=0
            reader_hostgroup=1
            comment="host groups"
          }
        )
        mysql_servers =
        (
          { address="{{ v "mysql-master-host"}}", port=3306, hostgroup=0, max_connections=1000, max_replication_lag = 5 },
          { address="{{ v "mysql-slave1-host"}}", port=3306, hostgroup=1, max_connections=1000, max_replication_lag = 5 },
          { address="{{ v "database_slave2_host"}}", port=3306, hostgroup=1, max_connections=1000, max_replication_lag = 5 }
        )
        mysql_users =
        (
          { username = "root", password = "{{ v "mpassword" }}",   default_hostgroup = 0, max_connections=1000, active = 1 }
        )
        mysql_query_rules =
        (
          {
            rule_id=1
            active=1
            match_pattern="^SELECT .* FOR UPDATE"
            destination_hostgroup=0
            apply=1
          },
          {
            rule_id=2
            active=1
            match_pattern="^SELECT .*"
            destination_hostgroup=1
            apply=1
          },
          {
            rule_id=3
            active=1
            match_pattern=".*"
            destination_hostgroup=0
            apply=1
          }
        )
      container: monk-proxysql
      path: /etc/proxysql.cnf
      mode: 0644
  services:
    admin:
      port: 6032
      container: monk-proxysql
      protocol: tcp
      # host-port: 6032
    mysql:
      port: 6033
      container: monk-proxysql
      protocol: tcp
      # host-port: 6033
    web:
      port: 6080
      container: monk-proxysql
      protocol: tcp
      # host-port: 6080
  depends:
    wait-for:
      runnables:
        - monk-mysql-proxysql/master
        - monk-mysql-proxysql/slave1
        - monk-mysql-proxysql/slave2
        - monk-mysql-proxysql/configure
      timeout: 60
